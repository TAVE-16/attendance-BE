name: deploy

on:
  push:
    branches: ["main"]
  workflow_dispatch:

env:
  IMAGE: tjdgus3488/tave16-attendance
  SERVER_DIR: /opt/app

concurrency:
  group: deploy-main
  cancel-in-progress: true

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions: { contents: read }
    steps:
      - uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & Push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ${{ env.IMAGE }}:latest
            ${{ env.IMAGE }}:${{ github.sha }}

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      # 0) 서버에 배포 경로 준비 (없으면 생성)
      - name: Ensure server dir
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            sudo mkdir -p ${{ env.SERVER_DIR }}
            sudo chown $USER:$USER ${{ env.SERVER_DIR }}

      # 1) .env 생성 (여기문서)
      - name: Create .env file
        run: |
          cat <<'EOF' > .env
          DB_URL=${{ secrets.DB_URL }}
          DB_NAME=${{ secrets.DB_NAME }}
          DB_USERNAME=${{ secrets.DB_USERNAME }}
          DB_PASSWORD=${{ secrets.DB_PASSWORD }}
          JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }}
          JWT_ACCESS_TOKEN_EXPIRATION=${{ secrets.JWT_ACCESS_TOKEN_EXPIRATION }}
          EOF

      # 2) docker-compose.yml 과 .env 를 서버로 업로드
      - name: Copy compose & env to server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          source: |
            docker-compose.yml
            .env
          target: "${{ env.SERVER_DIR }}"

      # 3) 서버에서 로그인 → pull → up -d → 정리
      - name: SSH deploy (compose pull & up -d)
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin
            cd ${{ env.SERVER_DIR }}
            docker compose pull
            docker compose up -d
            docker image prune -f
            docker compose ps